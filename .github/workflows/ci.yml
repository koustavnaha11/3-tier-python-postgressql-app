name: Kubernetes CI Pipeline (Python + PostgreSQL)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  python-static-analysis:
    name: Python Static Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint bandit

      - name: Run Pylint
        run: pylint **/*.py --output-format=colorized

      - name: Run Bandit Security Scan
        run: bandit -r . -f json -o bandit-report.json

  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    needs: python-static-analysis
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install TruffleHog
        run: pip install trufflehog

      - name: Create include_paths.txt
        run: |
          echo "./" > include_paths.txt
          echo "!Dockerfile" >> include_paths.txt

      - name: Run TruffleHog Scan
        run: trufflehog filesystem --repo_path ./ -i include_paths.txt --json > trufflehog-report.json

      - name: Install GitSecrets
        run: |
          sudo apt-get update
          sudo apt-get install -y git-secrets

      - name: Initialize GitSecrets
        run: |
          git secrets --install
          git secrets --scan

  docker-image-publish:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    needs: secret-scanning
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t koustavnaha11/aasakoda:latest .
          docker push koustavnaha11/aasakoda:latest

  helm-lint:
    name: Lint Helm Charts
    runs-on: ubuntu-latest
    needs: docker-image-publish
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Helm
        run: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Lint Helm Charts
        run: helm lint ./charts

  kube-manifest-scan:
    name: Scan Kubernetes Manifests
    runs-on: ubuntu-latest
    needs: helm-lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Kube Score
        run: |
          curl -sSL -o kube-score.tar.gz https://github.com/zegl/kube-score/releases/download/v1.20.0/kube-score_1.20.0_linux_amd64.tar.gz
          tar -xzf kube-score.tar.gz
          chmod +x kube-score
          sudo mv kube-score /usr/local/bin/

      - name: Run Kube Score
        run: helm template release-name ./charts | kube-score score -

      - name: Install Kube Linter
        run: |
          curl -sSLo kube-linter https://github.com/stackrox/kube-linter/releases/latest/download/kube-linter-linux
          chmod +x kube-linter
          sudo mv kube-linter /usr/local/bin/

      - name: Run Kube Linter
        run: kube-linter lint ./charts/templates

